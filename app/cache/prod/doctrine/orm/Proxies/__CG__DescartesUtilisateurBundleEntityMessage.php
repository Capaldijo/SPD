<?php

namespace Proxies\__CG__\Descartes\UtilisateurBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Message extends \Descartes\UtilisateurBundle\Entity\Message implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'sujetMessage', 'contenuMessage', 'date', 'idDestinataire', 'idUtilisateurm', 'loginDest', 'limite', 'idMessages');
        }

        return array('__isInitialized__', 'id', 'sujetMessage', 'contenuMessage', 'date', 'idDestinataire', 'idUtilisateurm', 'loginDest', 'limite', 'idMessages');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Message $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function sendMessage($id_exp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'sendMessage', array($id_exp));

        return parent::sendMessage($id_exp);
    }

    /**
     * {@inheritDoc}
     */
    public function getMyMessages($id_dest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMyMessages', array($id_dest));

        return parent::getMyMessages($id_dest);
    }

    /**
     * {@inheritDoc}
     */
    public function delMessage($id_message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delMessage', array($id_message));

        return parent::delMessage($id_message);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSujetMessage($sujetMessage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSujetMessage', array($sujetMessage));

        return parent::setSujetMessage($sujetMessage);
    }

    /**
     * {@inheritDoc}
     */
    public function getSujetMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSujetMessage', array());

        return parent::getSujetMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setContenuMessage($contenuMessage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContenuMessage', array($contenuMessage));

        return parent::setContenuMessage($contenuMessage);
    }

    /**
     * {@inheritDoc}
     */
    public function getContenuMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContenuMessage', array());

        return parent::getContenuMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', array($date));

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', array());

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdDestinataire($idDestinataire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdDestinataire', array($idDestinataire));

        return parent::setIdDestinataire($idDestinataire);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdDestinataire()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdDestinataire', array());

        return parent::getIdDestinataire();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUtilisateurm($idUtilisateurm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUtilisateurm', array($idUtilisateurm));

        return parent::setIdUtilisateurm($idUtilisateurm);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUtilisateurm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUtilisateurm', array());

        return parent::getIdUtilisateurm();
    }

    /**
     * {@inheritDoc}
     */
    public function setLoginDest($loginDest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLoginDest', array($loginDest));

        return parent::setLoginDest($loginDest);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoginDest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLoginDest', array());

        return parent::getLoginDest();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessages($messages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessages', array($messages));

        return parent::setMessages($messages);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessages', array());

        return parent::getMessages();
    }

    /**
     * {@inheritDoc}
     */
    public function setLimite($limite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLimite', array($limite));

        return parent::setLimite($limite);
    }

}
